Your task is to implement  2 stacks in one array efficiently.

Example 1:
Input:
push1(2)
push1(3)
push2(4)
pop1()
pop2()
pop2()

Output:
3 4 -1

Explanation:
push1(2) the stack1 will be {2}
push1(3) the stack1 will be {2,3}
push2(4) the stack2 will be {4}
pop1()   the poped element will be 3 
from stack1 and stack1 will be {2}
pop2()   the poped element will be 4 
from stack2 and now stack2 is empty
pop2()   the stack2 is now empty hence -1 .


Solution:

def push1(a,x):
    global top1
    if (top2-top1)>1:
        top1+=1
        a[top1]=x
    
def push2(a,x):
    global top2
    if top2-top1>1:
        top2-=1
        a[top2]=x
    
def pop1(a):
    global top1
    if top1>=0:
        ans=a[top1]
        top1-=1
        return ans
    return -1
       
def pop2(a):
    global top2
    if top2<len(a):
        ans=a[top2]
        top2+=1
        return ans
    return -1
