--------------------Space Optimization approach---------------
def solve(l):
    n=len(l)
    prev2=0
    prev1=l[0]
    for i in range(1,n):
        incl=l[i]+prev2
        excl=prev1
        curr=max(incl,excl)
        prev2=prev1
        prev1=curr
    return prev1

def houseRobber(valueInHouse):
    n=len(valueInHouse)
    l1=[]
    l2=[]
    if n==1:
        return valueInHouse[0]
    for i in range(n):
        if i!=n-1:
            l1.append(valueInHouse[i])
        if i!=0:
            l2.append(valueInHouse[i])
    return max(solve(l1),solve(l2))
