Problem :

Given 2 Arrays of Inorder and preorder traversal. The tree can contain duplicate elements. Construct a tree and print the Postorder traversal. 

Example 1:
Input:
N = 4
inorder[] = {1 6 8 7}
preorder[] = {1 6 7 8}
Output: 8 7 6 1

Example 2:
Input:
N = 6
inorder[] = {3 1 4 0 5 2}
preorder[] = {0 1 3 4 2 5}
Output: 3 4 1 5 2 0
Explanation: The tree will look like
       0
    /     \
   1       2
 /   \    /
3    4   5


Solution :
def buildtree(self, inorder, preorder, n):
        if not preorder or not inorder:
            return None
        root=Node(preorder[0])
        mid=inorder.index(preorder[0])
        root.left=self.buildtree(inorder[:mid],preorder[1:mid+1],n)
        root.right=self.buildtree(inorder[mid+1:],preorder[mid+1:],n)
        return root


