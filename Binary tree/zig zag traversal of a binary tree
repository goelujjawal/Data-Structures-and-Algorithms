Problem :
Given a Binary Tree. Find the Zig-Zag Level Order Traversal of the Binary Tree.

Example 1:
Input:
        1
      /   \
     2     3
    / \   /  \
   4   5 6    7
Output:
1 3 2 4 5 6 7

Example 2:
Input:
           7
        /     \
       9       7
     /  \     /   
    8    8   6     
   /  \
  10   9 
Output:
7 7 9 8 8 6 9 10 


Solution :

class Solution:
    def zigZagTraversal(self, root):
        if root==None:
            return
        currentlevel=[]
        nextLevel=[]
        l=[]
        flag=True
        currentlevel.append(root)
        while len(currentlevel)>0:
            temp=currentlevel.pop(-1)
            l.append(temp.data)
            if flag:
                if temp.left:
                    nextLevel.append(temp.left)
                if temp.right:
                    nextLevel.append(temp.right)
            else:
                if temp.right:
                    nextLevel.append(temp.right)
                if temp.left:
                    nextLevel.append(temp.left)
            if len(currentlevel)==0:
                flag=not flag
                currentlevel,nextLevel=nextLevel,currentlevel
        return l
