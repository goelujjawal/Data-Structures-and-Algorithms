Problem :

The diameter of a tree (sometimes called the width) is the number of nodes on the longest path between two end nodes. The diagram below shows two trees each with 
diameter nine, the leaves that form the ends of the longest path are shaded (note that there is more than one path in each tree of length nine, but no path longer 
than nine nodes). 

Input:
       1
     /  \
    2    3
Output: 3

Example 2:
Input:
         10
        /   \
      20    30
    /   \ 
   40   60
Output: 4

Solution :

class Solution:
    def height(self,node):
        if node==None:
            return 0
        else:
            lheight=self.height(node.left)
            rheight=self.height(node.right)
            # if lheight>rheight:
            #     return lheight+1
            # else:
            #     return rheight+1
            ans=max(lheight,rheight)+1
            return ans
    
    def diameter(self,root):
        if root==None:
            return 0
        else:
            op1=self.diameter(root.left)
            op2=self.diameter(root.right)
            op3=self.height(root.left)+1+self.height(root.right)
            maxi=max(op1,max(op2,op3))
            return maxi
