Problem :

Given two lists sorted in increasing order, create a new list representing the intersection of the two lists.
The new list should be made with its own memory â€” the original lists should not be changed.
Note: The list elements are not necessarily distinct.

Example 1:
Input:
L1 = 1->2->3->4->6
L2 = 2->4->6->8
Output: 2 4 6
Explanation: For the given first two linked list, 2, 4 and 6 are the elements in the intersection.

Example 2:
Input:
L1 = 10->20->40->50
L2 = 15->40
Output: 40


Solution :

def findIntersection(head1,head2):
    #return head
    temp1=head1
    temp2=head2
    head=None
    tail=None
    while temp1!=None and temp2!=None:
        if temp1.data==temp2.data:
            newnode=Node(temp1.data)
            if head==None:
                head=newnode
                tail=newnode
            else:
                tail.next=newnode
                tail=newnode
            temp1=temp1.next
            temp2=temp2.next
        elif temp1.data>temp2.data:
            temp2=temp2.next
        else:
            temp1=temp1.next
    return head
