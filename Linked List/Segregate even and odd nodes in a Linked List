Problem :

Given a link list of size N, modify the list such that all the even numbers appear before all the odd numbers in the modified list. 
The order of appearance of numbers within each segregation should be same as that in the original list.
NOTE: Don't create a new linked list, instead rearrange the provided one.

Example 1:
Input: 
N = 7
Link List:
17 -> 15 -> 8 -> 9 -> 2 -> 4 -> 6 -> NULL

Output: 8 2 4 6 17 15 9

Explaination: 8,2,4,6 are the even numbers 
so they appear first and 17,15,9 are odd 
numbers that appear later.

Example 2:
Input:
N = 4
Link List:
1 -> 3 -> 5 -> 7

Output: 1 3 5 7

Explaination: There is no even number. 
So ne need for modification.


Solution :

class Solution:
    def divide(self, N, head):
        evenhead=None
        oddhead=None
        eventail=evenhead
        oddtail=oddhead
        temp=head
        while temp!=None:
            if temp.data%2==0:
                if evenhead==None:
                    evenhead=temp
                    eventail=temp
                else:
                    eventail.next=temp
                    eventail=temp
            else:
                if oddhead==None:
                    oddhead=temp
                    oddtail=temp
                else:
                    oddtail.next=temp
                    oddtail=temp
            temp=temp.next
        if eventail!=None:
            eventail.next=oddhead
        if oddtail!=None:
            oddtail.next=None
        if evenhead!=None:
            return evenhead
        else:
            return oddhead
