Problme :

Given a sorted array arr containing n elements with possibly duplicate elements,
the task is to find indexes of first and last occurrences of an element x in the given array.

Example 1:
Input:
n=9, x=5
arr[] = { 1, 3, 5, 5, 5, 5, 67, 123, 125 }
Output:  2 5
Explanation: First occurrence of 5 is at index 2 and last occurrence of 5 is at index 5. 
 
Example 2:
Input:
n=9, x=7
arr[] = { 1, 3, 5, 5, 5, 5, 7, 123, 125 }
Output:  6 6 


Solution :

n=9
x=5
arr= [1, 3, 5, 5, 5, 5, 67, 123, 125]
def find(arr,n,x):
    def first(arr,n,x):
        start=0
        end=n-1
        res1=-1
        mid=start+((end-start)//2)
        while start<=end:
            if arr[mid]==x:
                res1=mid
                end=mid-1
            if arr[mid]>x:
                end=mid-1
            if arr[mid]<x:
                start=mid+1
            mid=start+((end-start)//2)
        return res1
    def last(arr,n,x):
        start=0
        end=n-1
        res2=-1
        mid=start+((end-start)//2)
        while start<=end:
            if arr[mid]==x:
                res2=mid
                start=mid+1
            if arr[mid]>x:
                end=mid-1
            if arr[mid]<x:
                start=mid+1
            mid=start+((end-start)//2)
        return res2
    ans1=first(arr,n,x)
    ans2=last(arr,n,x)
    return ans1, ans2
print(find(arr,n,x))
