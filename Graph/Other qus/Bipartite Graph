Note: A bipartite graph also called a bi-graph, is a set of graph vertices, i.e, points where multiple lines meet, decomposed into two disjoint sets,
      meaning they have no element in common, such that no two graph vertices within the same set are adjacent.

def bipartite(graph,node,visited,color,c):
  visited[node]=1
  color[node]=c
  for child in graph[node]:
    if not visited[child]:
      temp=bipartite(graph,child,visited,color,c^1)
      if temp==False:
        return False
    else:
      if color[node]==color[child]
        return False
  return True

ipt=[[1,2],[2,4],[4,3],[3,1],[2,5],[4,5]
n=5

graph={}
visited={}
color={}

for i in range(1,n+1):
  graph[i]=[]
  visited[i]=0
  color[i]=None
  
for u,v in ipt:
  graph[u].append(v)
  graph[v].append(u)
  
temp=bipartite(graph,1,visited,color,0)
print(temp)


Output: True
