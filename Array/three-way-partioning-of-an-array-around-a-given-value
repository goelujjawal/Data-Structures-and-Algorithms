Problem :

Given an array of size n and a range [a, b]. The task is to partition the array around the range such that array is divided into three parts.
1) All elements smaller than a come first.
2) All elements in range a to b come next.
3) All elements greater than b appear in the end.
The individual elements of three sets can appear in any order. You are required to return the modified array.

Example 1:
Input: 
n = 5
A[] = {1, 2, 3, 3, 4}
[a, b] = [1, 2]
Output: 1
Explanation: One possible arrangement is:
{1, 2, 3, 3, 4}. If you return a valid
arrangement, output will be 1.

Example 2:
Input: 
n = 3 
A[] = {1, 2, 3}
[a, b] = [1, 3]
Output: 1
Explanation: One possible arrangement 
is: {1, 2, 3}. If you return a valid
arrangement, output will be 1.


Solution :

arr=list(map(int,input().split()))
a,b=list(map(int,input().split()))
l=0
m=0
h=len(arr)-1
while m<=h:
    if arr[m]<a:
        temp=arr[l]
        arr[l]=arr[m]
        arr[m]=temp
        l+=1
        m+=1
    elif arr[m]>b:
        temp=arr[h]
        arr[h]=arr[m]
        arr[m]=temp
        h-=1
    else:
        m+=1
print(a)
        
